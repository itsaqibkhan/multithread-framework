<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="user-Latitude-3420" failures="0" tests="1" name="Realme" time="20.689" errors="0" timestamp="2023-11-23T19:25:07 IST">
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="20.663">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20044ms. 
Host info: host: &amp;apos;user-Latitude-3420&amp;apos;, ip: &amp;apos;127.0.1.1&amp;apos;
Build info: version: &amp;apos;4.13.0&amp;apos;, revision: &amp;apos;ba948ece5b*&amp;apos;
System info: os.name: &amp;apos;Linux&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;5.15.0-88-generic&amp;apos;, java.version: &amp;apos;15.0.2&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:systemPort=10001, appium:udid=L7854L45IJ8X5L5X, appium:appActivity=com.saucelabs.mydemoapp.rn.MainActivity, platformName=ANDROID, appium:automationName=UiAutomator2, appium:appPackage=com.saucelabs.mydemoapp.rn}], desiredCapabilities=Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20044ms. 
Host info: host: 'user-Latitude-3420', ip: '127.0.1.1'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-88-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:systemPort=10001, appium:udid=L7854L45IJ8X5L5X, appium:appActivity=com.saucelabs.mydemoapp.rn.MainActivity, platformName=ANDROID, appium:automationName=UiAutomator2, appium:appPackage=com.saucelabs.mydemoapp.rn}], desiredCapabilities=Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at com.qa.BaseTest.beforeTest(BaseTest.java:205)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeClass beforeClass" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="lockedUserSoftAssert" time="0.0">
    <ignored/>
  </testcase> <!-- lockedUserSoftAssert -->
  <testcase classname="com.qa.tests.LoginTests" name="emptyUserName" time="0.0">
    <ignored/>
  </testcase> <!-- emptyUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="validUserName" time="0.0">
    <ignored/>
  </testcase> <!-- validUserName -->
</testsuite> <!-- Realme -->
