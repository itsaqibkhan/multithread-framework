<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="user-Latitude-3420" failures="0" tests="2" name="com.qa.tests.LoginTests" time="20.663" errors="1" timestamp="2023-11-23T19:25:07 IST" skipped="1">
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.000">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="beforeTest" time="20.663">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20044ms. 
Host info: host: &#039;user-Latitude-3420&#039;, ip: &#039;127.0.1.1&#039;
Build info: version: &#039;4.13.0&#039;, revision: &#039;ba948ece5b*&#039;
System info: os.name: &#039;Linux&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;5.15.0-88-generic&#039;, java.version: &#039;15.0.2&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:systemPort=10001, appium:udid=L7854L45IJ8X5L5X, appium:appActivity=com.saucelabs.mydemoapp.rn.MainActivity, platformName=ANDROID, appium:automationName=UiAutomator2, appium:appPackage=com.saucelabs.mydemoapp.rn}], desiredCapabilities=Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a connected Android device in 20044ms. 
Host info: host: 'user-Latitude-3420', ip: '127.0.1.1'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-88-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:systemPort=10001, appium:udid=L7854L45IJ8X5L5X, appium:appActivity=com.saucelabs.mydemoapp.rn.MainActivity, platformName=ANDROID, appium:automationName=UiAutomator2, appium:appPackage=com.saucelabs.mydemoapp.rn}], desiredCapabilities=Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:systemPort: 10001, appium:udid: L7854L45IJ8X5L5X, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at com.qa.BaseTest.beforeTest(BaseTest.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:663)
at org.testng.TestRunner.beforeRun(TestRunner.java:652)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
    </error>
  </testcase> <!-- beforeTest -->
</testsuite> <!-- com.qa.tests.LoginTests -->
