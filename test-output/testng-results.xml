<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="3" failed="1" skipped="4">
  <reporter-output>
    <line>
      <![CDATA[This is a test reporter]]>
    </line>
    <line>
      <![CDATA[<a href='/home/user/IdeaProjects/practiceFrameworkMultiThreadCheap/Screenshots/Android_12_Pixel 5/2023-10-29-21-29-58/LoginTests/lockedUserSoftAssert.png'> <img src='/home/user/IdeaProjects/practiceFrameworkMultiThreadCheap/Screenshots/Android_12_Pixel 5/2023-10-29-21-29-58/LoginTests/lockedUserSoftAssert.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2023-10-29T21:29:58 IST" name="suit" finished-at="2023-10-29T21:30:48 IST" duration-ms="50207">
    <groups>
    </groups>
    <test started-at="2023-10-29T21:29:58 IST" name="Realme" finished-at="2023-10-29T21:30:13 IST" duration-ms="15179">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:29:55 IST" name="beforeSuite" finished-at="2023-10-29T21:29:58 IST" duration-ms="3299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:29:58 IST" name="beforeTest" finished-at="2023-10-29T21:30:08 IST" duration-ms="9917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Realme 7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[L7854L45IJ8X5L5X]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[10001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:08 IST" name="beforeClass" finished-at="2023-10-29T21:30:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:08 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="5227" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="emptyUserName()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="emptyUserName" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="afterMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="invalidUserName" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="afterMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="lockedUserSoftAssert()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="lockedUserSoftAssert" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedUserSoftAssert -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="afterMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="beforeMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validUserName()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="validUserName" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: The expected screen record file '/sdcard/ebfc018a.mp4' does not exist after 5000ms. Is screenrecord utility available and operational on the device under test?
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-87-generic', java.version: '15.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [623f31d2-dd08-4086-af6d-354187c04b4c, startRecordingScreen {}]
Capabilities {appium:appActivity: com.saucelabs.mydemoapp.rn...., appium:appPackage: com.saucelabs.mydemoapp.rn, appium:automationName: UiAutomator2, appium:databaseEnabled: false, appium:desired: {appActivity: com.saucelabs.mydemoapp.rn...., appPackage: com.saucelabs.mydemoapp.rn, automationName: UiAutomator2, platformName: ANDROID, systemPort: 10001, udid: L7854L45IJ8X5L5X}, appium:deviceApiLevel: 30, appium:deviceManufacturer: realme, appium:deviceModel: RMX2151, appium:deviceName: L7854L45IJ8X5L5X, appium:deviceScreenDensity: 480, appium:deviceScreenSize: 1080x2400, appium:deviceUDID: L7854L45IJ8X5L5X, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:pixelRatio: 3, appium:platformVersion: 11, appium:statBarHeight: 115, appium:systemPort: 10001, appium:takesScreenshot: true, appium:udid: L7854L45IJ8X5L5X, appium:viewportRect: {height: 2170, left: 0, top: 115, width: 1080}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 623f31d2-dd08-4086-af6d-354187c04b4c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="afterMethod" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:13 IST" name="afterTest" finished-at="2023-10-29T21:30:13 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTests@661972b0]" started-at="2023-10-29T21:30:48 IST" name="afterSuite" finished-at="2023-10-29T21:30:48 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Realme -->
    <test started-at="2023-10-29T21:29:58 IST" name="Pixel" finished-at="2023-10-29T21:30:48 IST" duration-ms="50207">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:29:58 IST" name="beforeTest" finished-at="2023-10-29T21:30:06 IST" duration-ms="7686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pixel 5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pixel_5_V12]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:06 IST" name="beforeClass" finished-at="2023-10-29T21:30:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:06 IST" name="beforeMethod" finished-at="2023-10-29T21:30:06 IST" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:06 IST" name="beforeMethod" finished-at="2023-10-29T21:30:08 IST" duration-ms="1396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.emptyUserName() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="emptyUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:08 IST" name="emptyUserName" finished-at="2023-10-29T21:30:14 IST" duration-ms="6455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:14 IST" name="afterMethod" finished-at="2023-10-29T21:30:15 IST" duration-ms="1277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptyUserName status=SUCCESS method=LoginTests.emptyUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:15 IST" name="beforeMethod" finished-at="2023-10-29T21:30:16 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:16 IST" name="beforeMethod" finished-at="2023-10-29T21:30:17 IST" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserName() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:17 IST" name="invalidUserName" finished-at="2023-10-29T21:30:24 IST" duration-ms="7798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:24 IST" name="afterMethod" finished-at="2023-10-29T21:30:26 IST" duration-ms="1335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=SUCCESS method=LoginTests.invalidUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:26 IST" name="beforeMethod" finished-at="2023-10-29T21:30:26 IST" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:26 IST" name="beforeMethod" finished-at="2023-10-29T21:30:27 IST" duration-ms="819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.lockedUserSoftAssert() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="lockedUserSoftAssert()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:27 IST" name="lockedUserSoftAssert" finished-at="2023-10-29T21:30:36 IST" duration-ms="8786" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Provided credentials do not match any user in this service.] but found [Sorry, this user has been locked out.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Provided credentials do not match any user in this service.] but found [Sorry, this user has been locked out.]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.qa.tests.LoginTests.lockedUserSoftAssert(LoginTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is a test reporter]]>
            </line>
            <line>
              <![CDATA[<a href='/home/user/IdeaProjects/practiceFrameworkMultiThreadCheap/Screenshots/Android_12_Pixel 5/2023-10-29-21-29-58/LoginTests/lockedUserSoftAssert.png'> <img src='/home/user/IdeaProjects/practiceFrameworkMultiThreadCheap/Screenshots/Android_12_Pixel 5/2023-10-29-21-29-58/LoginTests/lockedUserSoftAssert.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- lockedUserSoftAssert -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:36 IST" name="afterMethod" finished-at="2023-10-29T21:30:38 IST" duration-ms="1219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedUserSoftAssert status=FAILURE method=LoginTests.lockedUserSoftAssert()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e] output=This is a test reporter]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:38 IST" name="beforeMethod" finished-at="2023-10-29T21:30:38 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:38 IST" name="beforeMethod" finished-at="2023-10-29T21:30:39 IST" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.validUserName() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:39 IST" name="validUserName" finished-at="2023-10-29T21:30:47 IST" duration-ms="8034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:47 IST" name="afterMethod" finished-at="2023-10-29T21:30:48 IST" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validUserName status=SUCCESS method=LoginTests.validUserName()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@3d51f06e]" started-at="2023-10-29T21:30:48 IST" name="afterTest" finished-at="2023-10-29T21:30:48 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Pixel -->
  </suite> <!-- suit -->
</testng-results>
